name: .NET

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
      
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Publish Win-x64
      run: dotnet publish -c Release -r win-x64 -p:PublishSingleFile=true /p:PublishTrimmed=true ./TestApp/TestApp.csproj
    - name: Upload Win64 Artifact
      uses: actions/upload-artifact@v2.2.2
      with:
        name: win-x64
        path: ./TestApp/bin/Release/net5.0/win-x64/publish/
    - name: Publish Win-x86
      run: dotnet publish -c Release -r win-x86 -p:PublishSingleFile=true /p:PublishTrimmed=true ./TestApp/TestApp.csproj
    - name: Upload Win86 Artifact
      uses: actions/upload-artifact@v2.2.2
      with:
        name: win-x86
        path: ./TestApp/bin/Release/net5.0/win-x86/publish/
    - name: Publish OSX 10.12+
      run: dotnet publish -c Release -r osx-x64 -p:PublishSingleFile=true /p:PublishTrimmed=true ./TestApp/TestApp.csproj
    - name: Upload OSX Artifact
      uses: actions/upload-artifact@v2.2.2
      with:
        name: osx-x64
        path: ./TestApp/bin/Release/net5.0/osx-x64/publish/
    - name: Publish Linux-x64
      run: dotnet publish -c Release -r linux-x64 -p:PublishSingleFile=true /p:PublishTrimmed=true ./TestApp/TestApp.csproj
    - name: Upload Linux Artifact
      uses: actions/upload-artifact@v2.2.2
      with:
        name: linux-x64
        path: ./TestApp/bin/Release/net5.0/linux-x64/publish/
  
  create-prerelase:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Get Linux Artifacts
        uses: actions/download-artifact@v2.0.8
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          filename: 'linux-x64.zip'
          path: 'linux-x64'
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./linux-x64.zip
          asset_name: linux-x64.zip
          asset_content_type: application/zip

